//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WPFClient.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ClientDC", Namespace="http://schemas.datacontract.org/2004/07/ServiceAssembly.DataContracts")]
    [System.SerializableAttribute()]
    public partial class ClientDC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AvatarIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AvatarID {
            get {
                return this.AvatarIDField;
            }
            set {
                if ((this.AvatarIDField.Equals(value) != true)) {
                    this.AvatarIDField = value;
                    this.RaisePropertyChanged("AvatarID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MessageDC", Namespace="http://schemas.datacontract.org/2004/07/ServiceAssembly.DataContracts")]
    [System.SerializableAttribute()]
    public partial class MessageDC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ContentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Content {
            get {
                return this.ContentField;
            }
            set {
                if ((object.ReferenceEquals(this.ContentField, value) != true)) {
                    this.ContentField = value;
                    this.RaisePropertyChanged("Content");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileMessageDC", Namespace="http://schemas.datacontract.org/2004/07/ServiceAssembly.DataContracts")]
    [System.SerializableAttribute()]
    public partial class FileMessageDC : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] DataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SenderField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] Data {
            get {
                return this.DataField;
            }
            set {
                if ((object.ReferenceEquals(this.DataField, value) != true)) {
                    this.DataField = value;
                    this.RaisePropertyChanged("Data");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sender {
            get {
                return this.SenderField;
            }
            set {
                if ((object.ReferenceEquals(this.SenderField, value) != true)) {
                    this.SenderField = value;
                    this.RaisePropertyChanged("Sender");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Time {
            get {
                return this.TimeField;
            }
            set {
                if ((this.TimeField.Equals(value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IChat", CallbackContract=typeof(WPFClient.ServiceReference1.IChatCallback), SessionMode=System.ServiceModel.SessionMode.Required)]
    public interface IChat {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/Connect", ReplyAction="http://tempuri.org/IChat/ConnectResponse")]
        bool Connect(WPFClient.ServiceReference1.ClientDC client);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChat/Connect", ReplyAction="http://tempuri.org/IChat/ConnectResponse")]
        System.IAsyncResult BeginConnect(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState);
        
        bool EndConnect(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/Register", ReplyAction="http://tempuri.org/IChat/RegisterResponse")]
        bool Register(WPFClient.ServiceReference1.ClientDC client);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChat/Register", ReplyAction="http://tempuri.org/IChat/RegisterResponse")]
        System.IAsyncResult BeginRegister(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState);
        
        bool EndRegister(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/Update", ReplyAction="http://tempuri.org/IChat/UpdateResponse")]
        bool Update(WPFClient.ServiceReference1.ClientDC client, string password);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChat/Update", ReplyAction="http://tempuri.org/IChat/UpdateResponse")]
        System.IAsyncResult BeginUpdate(WPFClient.ServiceReference1.ClientDC client, string password, System.AsyncCallback callback, object asyncState);
        
        bool EndUpdate(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/Delete", ReplyAction="http://tempuri.org/IChat/DeleteResponse")]
        bool Delete(WPFClient.ServiceReference1.ClientDC client);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChat/Delete", ReplyAction="http://tempuri.org/IChat/DeleteResponse")]
        System.IAsyncResult BeginDelete(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState);
        
        bool EndDelete(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/Say")]
        void Say(WPFClient.ServiceReference1.MessageDC msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/Say")]
        System.IAsyncResult BeginSay(WPFClient.ServiceReference1.MessageDC msg, System.AsyncCallback callback, object asyncState);
        
        void EndSay(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/Whisper")]
        void Whisper(WPFClient.ServiceReference1.MessageDC msg, WPFClient.ServiceReference1.ClientDC receiver);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/Whisper")]
        System.IAsyncResult BeginWhisper(WPFClient.ServiceReference1.MessageDC msg, WPFClient.ServiceReference1.ClientDC receiver, System.AsyncCallback callback, object asyncState);
        
        void EndWhisper(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/IsWriting")]
        void IsWriting(WPFClient.ServiceReference1.ClientDC client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/IsWriting")]
        System.IAsyncResult BeginIsWriting(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState);
        
        void EndIsWriting(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IChat/SendFile", ReplyAction="http://tempuri.org/IChat/SendFileResponse")]
        bool SendFile(WPFClient.ServiceReference1.FileMessageDC fileMsg, WPFClient.ServiceReference1.ClientDC receiver);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="http://tempuri.org/IChat/SendFile", ReplyAction="http://tempuri.org/IChat/SendFileResponse")]
        System.IAsyncResult BeginSendFile(WPFClient.ServiceReference1.FileMessageDC fileMsg, WPFClient.ServiceReference1.ClientDC receiver, System.AsyncCallback callback, object asyncState);
        
        bool EndSendFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, Action="http://tempuri.org/IChat/Disconnect")]
        void Disconnect(WPFClient.ServiceReference1.ClientDC client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, IsTerminating=true, AsyncPattern=true, Action="http://tempuri.org/IChat/Disconnect")]
        System.IAsyncResult BeginDisconnect(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState);
        
        void EndDisconnect(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatCallback {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/RefreshClients")]
        void RefreshClients(System.Collections.Generic.List<WPFClient.ServiceReference1.ClientDC> clients);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/RefreshClients")]
        System.IAsyncResult BeginRefreshClients(System.Collections.Generic.List<WPFClient.ServiceReference1.ClientDC> clients, System.AsyncCallback callback, object asyncState);
        
        void EndRefreshClients(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/Receive")]
        void Receive(WPFClient.ServiceReference1.MessageDC msg);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/Receive")]
        System.IAsyncResult BeginReceive(WPFClient.ServiceReference1.MessageDC msg, System.AsyncCallback callback, object asyncState);
        
        void EndReceive(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/ReceiveWhisper")]
        void ReceiveWhisper(WPFClient.ServiceReference1.MessageDC msg, WPFClient.ServiceReference1.ClientDC receiver);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/ReceiveWhisper")]
        System.IAsyncResult BeginReceiveWhisper(WPFClient.ServiceReference1.MessageDC msg, WPFClient.ServiceReference1.ClientDC receiver, System.AsyncCallback callback, object asyncState);
        
        void EndReceiveWhisper(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/IsWritingCallback")]
        void IsWritingCallback(WPFClient.ServiceReference1.ClientDC client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/IsWritingCallback")]
        System.IAsyncResult BeginIsWritingCallback(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState);
        
        void EndIsWritingCallback(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/ReceiverFile")]
        void ReceiverFile(WPFClient.ServiceReference1.FileMessageDC fileMsg, WPFClient.ServiceReference1.ClientDC receiver);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/ReceiverFile")]
        System.IAsyncResult BeginReceiverFile(WPFClient.ServiceReference1.FileMessageDC fileMsg, WPFClient.ServiceReference1.ClientDC receiver, System.AsyncCallback callback, object asyncState);
        
        void EndReceiverFile(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/UserJoin")]
        void UserJoin(WPFClient.ServiceReference1.ClientDC client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/UserJoin")]
        System.IAsyncResult BeginUserJoin(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState);
        
        void EndUserJoin(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/UserLeave")]
        void UserLeave(WPFClient.ServiceReference1.ClientDC client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/UserLeave")]
        System.IAsyncResult BeginUserLeave(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState);
        
        void EndUserLeave(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IChat/DisconnectClient")]
        void DisconnectClient(WPFClient.ServiceReference1.ClientDC client);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, AsyncPattern=true, Action="http://tempuri.org/IChat/DisconnectClient")]
        System.IAsyncResult BeginDisconnectClient(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState);
        
        void EndDisconnectClient(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IChatChannel : WPFClient.ServiceReference1.IChat, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConnectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConnectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RegisterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public RegisterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UpdateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public UpdateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DeleteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public DeleteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SendFileCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SendFileCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public bool Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ChatClient : System.ServiceModel.DuplexClientBase<WPFClient.ServiceReference1.IChat>, WPFClient.ServiceReference1.IChat {
        
        private BeginOperationDelegate onBeginConnectDelegate;
        
        private EndOperationDelegate onEndConnectDelegate;
        
        private System.Threading.SendOrPostCallback onConnectCompletedDelegate;
        
        private BeginOperationDelegate onBeginRegisterDelegate;
        
        private EndOperationDelegate onEndRegisterDelegate;
        
        private System.Threading.SendOrPostCallback onRegisterCompletedDelegate;
        
        private BeginOperationDelegate onBeginUpdateDelegate;
        
        private EndOperationDelegate onEndUpdateDelegate;
        
        private System.Threading.SendOrPostCallback onUpdateCompletedDelegate;
        
        private BeginOperationDelegate onBeginDeleteDelegate;
        
        private EndOperationDelegate onEndDeleteDelegate;
        
        private System.Threading.SendOrPostCallback onDeleteCompletedDelegate;
        
        private BeginOperationDelegate onBeginSayDelegate;
        
        private EndOperationDelegate onEndSayDelegate;
        
        private System.Threading.SendOrPostCallback onSayCompletedDelegate;
        
        private BeginOperationDelegate onBeginWhisperDelegate;
        
        private EndOperationDelegate onEndWhisperDelegate;
        
        private System.Threading.SendOrPostCallback onWhisperCompletedDelegate;
        
        private BeginOperationDelegate onBeginIsWritingDelegate;
        
        private EndOperationDelegate onEndIsWritingDelegate;
        
        private System.Threading.SendOrPostCallback onIsWritingCompletedDelegate;
        
        private BeginOperationDelegate onBeginSendFileDelegate;
        
        private EndOperationDelegate onEndSendFileDelegate;
        
        private System.Threading.SendOrPostCallback onSendFileCompletedDelegate;
        
        private BeginOperationDelegate onBeginDisconnectDelegate;
        
        private EndOperationDelegate onEndDisconnectDelegate;
        
        private System.Threading.SendOrPostCallback onDisconnectCompletedDelegate;
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance) : 
                base(callbackInstance) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName) : 
                base(callbackInstance, endpointConfigurationName) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, string remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, endpointConfigurationName, remoteAddress) {
        }
        
        public ChatClient(System.ServiceModel.InstanceContext callbackInstance, System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(callbackInstance, binding, remoteAddress) {
        }
        
        public event System.EventHandler<ConnectCompletedEventArgs> ConnectCompleted;
        
        public event System.EventHandler<RegisterCompletedEventArgs> RegisterCompleted;
        
        public event System.EventHandler<UpdateCompletedEventArgs> UpdateCompleted;
        
        public event System.EventHandler<DeleteCompletedEventArgs> DeleteCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> SayCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> WhisperCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> IsWritingCompleted;
        
        public event System.EventHandler<SendFileCompletedEventArgs> SendFileCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> DisconnectCompleted;
        
        public bool Connect(WPFClient.ServiceReference1.ClientDC client) {
            return base.Channel.Connect(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginConnect(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConnect(client, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndConnect(System.IAsyncResult result) {
            return base.Channel.EndConnect(result);
        }
        
        private System.IAsyncResult OnBeginConnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WPFClient.ServiceReference1.ClientDC client = ((WPFClient.ServiceReference1.ClientDC)(inValues[0]));
            return this.BeginConnect(client, callback, asyncState);
        }
        
        private object[] OnEndConnect(System.IAsyncResult result) {
            bool retVal = this.EndConnect(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConnectCompleted(object state) {
            if ((this.ConnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConnectCompleted(this, new ConnectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConnectAsync(WPFClient.ServiceReference1.ClientDC client) {
            this.ConnectAsync(client, null);
        }
        
        public void ConnectAsync(WPFClient.ServiceReference1.ClientDC client, object userState) {
            if ((this.onBeginConnectDelegate == null)) {
                this.onBeginConnectDelegate = new BeginOperationDelegate(this.OnBeginConnect);
            }
            if ((this.onEndConnectDelegate == null)) {
                this.onEndConnectDelegate = new EndOperationDelegate(this.OnEndConnect);
            }
            if ((this.onConnectCompletedDelegate == null)) {
                this.onConnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConnectCompleted);
            }
            base.InvokeAsync(this.onBeginConnectDelegate, new object[] {
                        client}, this.onEndConnectDelegate, this.onConnectCompletedDelegate, userState);
        }
        
        public bool Register(WPFClient.ServiceReference1.ClientDC client) {
            return base.Channel.Register(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginRegister(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginRegister(client, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndRegister(System.IAsyncResult result) {
            return base.Channel.EndRegister(result);
        }
        
        private System.IAsyncResult OnBeginRegister(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WPFClient.ServiceReference1.ClientDC client = ((WPFClient.ServiceReference1.ClientDC)(inValues[0]));
            return this.BeginRegister(client, callback, asyncState);
        }
        
        private object[] OnEndRegister(System.IAsyncResult result) {
            bool retVal = this.EndRegister(result);
            return new object[] {
                    retVal};
        }
        
        private void OnRegisterCompleted(object state) {
            if ((this.RegisterCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.RegisterCompleted(this, new RegisterCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void RegisterAsync(WPFClient.ServiceReference1.ClientDC client) {
            this.RegisterAsync(client, null);
        }
        
        public void RegisterAsync(WPFClient.ServiceReference1.ClientDC client, object userState) {
            if ((this.onBeginRegisterDelegate == null)) {
                this.onBeginRegisterDelegate = new BeginOperationDelegate(this.OnBeginRegister);
            }
            if ((this.onEndRegisterDelegate == null)) {
                this.onEndRegisterDelegate = new EndOperationDelegate(this.OnEndRegister);
            }
            if ((this.onRegisterCompletedDelegate == null)) {
                this.onRegisterCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnRegisterCompleted);
            }
            base.InvokeAsync(this.onBeginRegisterDelegate, new object[] {
                        client}, this.onEndRegisterDelegate, this.onRegisterCompletedDelegate, userState);
        }
        
        public bool Update(WPFClient.ServiceReference1.ClientDC client, string password) {
            return base.Channel.Update(client, password);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginUpdate(WPFClient.ServiceReference1.ClientDC client, string password, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginUpdate(client, password, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndUpdate(System.IAsyncResult result) {
            return base.Channel.EndUpdate(result);
        }
        
        private System.IAsyncResult OnBeginUpdate(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WPFClient.ServiceReference1.ClientDC client = ((WPFClient.ServiceReference1.ClientDC)(inValues[0]));
            string password = ((string)(inValues[1]));
            return this.BeginUpdate(client, password, callback, asyncState);
        }
        
        private object[] OnEndUpdate(System.IAsyncResult result) {
            bool retVal = this.EndUpdate(result);
            return new object[] {
                    retVal};
        }
        
        private void OnUpdateCompleted(object state) {
            if ((this.UpdateCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.UpdateCompleted(this, new UpdateCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void UpdateAsync(WPFClient.ServiceReference1.ClientDC client, string password) {
            this.UpdateAsync(client, password, null);
        }
        
        public void UpdateAsync(WPFClient.ServiceReference1.ClientDC client, string password, object userState) {
            if ((this.onBeginUpdateDelegate == null)) {
                this.onBeginUpdateDelegate = new BeginOperationDelegate(this.OnBeginUpdate);
            }
            if ((this.onEndUpdateDelegate == null)) {
                this.onEndUpdateDelegate = new EndOperationDelegate(this.OnEndUpdate);
            }
            if ((this.onUpdateCompletedDelegate == null)) {
                this.onUpdateCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnUpdateCompleted);
            }
            base.InvokeAsync(this.onBeginUpdateDelegate, new object[] {
                        client,
                        password}, this.onEndUpdateDelegate, this.onUpdateCompletedDelegate, userState);
        }
        
        public bool Delete(WPFClient.ServiceReference1.ClientDC client) {
            return base.Channel.Delete(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDelete(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDelete(client, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndDelete(System.IAsyncResult result) {
            return base.Channel.EndDelete(result);
        }
        
        private System.IAsyncResult OnBeginDelete(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WPFClient.ServiceReference1.ClientDC client = ((WPFClient.ServiceReference1.ClientDC)(inValues[0]));
            return this.BeginDelete(client, callback, asyncState);
        }
        
        private object[] OnEndDelete(System.IAsyncResult result) {
            bool retVal = this.EndDelete(result);
            return new object[] {
                    retVal};
        }
        
        private void OnDeleteCompleted(object state) {
            if ((this.DeleteCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DeleteCompleted(this, new DeleteCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DeleteAsync(WPFClient.ServiceReference1.ClientDC client) {
            this.DeleteAsync(client, null);
        }
        
        public void DeleteAsync(WPFClient.ServiceReference1.ClientDC client, object userState) {
            if ((this.onBeginDeleteDelegate == null)) {
                this.onBeginDeleteDelegate = new BeginOperationDelegate(this.OnBeginDelete);
            }
            if ((this.onEndDeleteDelegate == null)) {
                this.onEndDeleteDelegate = new EndOperationDelegate(this.OnEndDelete);
            }
            if ((this.onDeleteCompletedDelegate == null)) {
                this.onDeleteCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDeleteCompleted);
            }
            base.InvokeAsync(this.onBeginDeleteDelegate, new object[] {
                        client}, this.onEndDeleteDelegate, this.onDeleteCompletedDelegate, userState);
        }
        
        public void Say(WPFClient.ServiceReference1.MessageDC msg) {
            base.Channel.Say(msg);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSay(WPFClient.ServiceReference1.MessageDC msg, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSay(msg, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndSay(System.IAsyncResult result) {
            base.Channel.EndSay(result);
        }
        
        private System.IAsyncResult OnBeginSay(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WPFClient.ServiceReference1.MessageDC msg = ((WPFClient.ServiceReference1.MessageDC)(inValues[0]));
            return this.BeginSay(msg, callback, asyncState);
        }
        
        private object[] OnEndSay(System.IAsyncResult result) {
            this.EndSay(result);
            return null;
        }
        
        private void OnSayCompleted(object state) {
            if ((this.SayCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SayCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SayAsync(WPFClient.ServiceReference1.MessageDC msg) {
            this.SayAsync(msg, null);
        }
        
        public void SayAsync(WPFClient.ServiceReference1.MessageDC msg, object userState) {
            if ((this.onBeginSayDelegate == null)) {
                this.onBeginSayDelegate = new BeginOperationDelegate(this.OnBeginSay);
            }
            if ((this.onEndSayDelegate == null)) {
                this.onEndSayDelegate = new EndOperationDelegate(this.OnEndSay);
            }
            if ((this.onSayCompletedDelegate == null)) {
                this.onSayCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSayCompleted);
            }
            base.InvokeAsync(this.onBeginSayDelegate, new object[] {
                        msg}, this.onEndSayDelegate, this.onSayCompletedDelegate, userState);
        }
        
        public void Whisper(WPFClient.ServiceReference1.MessageDC msg, WPFClient.ServiceReference1.ClientDC receiver) {
            base.Channel.Whisper(msg, receiver);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginWhisper(WPFClient.ServiceReference1.MessageDC msg, WPFClient.ServiceReference1.ClientDC receiver, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginWhisper(msg, receiver, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndWhisper(System.IAsyncResult result) {
            base.Channel.EndWhisper(result);
        }
        
        private System.IAsyncResult OnBeginWhisper(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WPFClient.ServiceReference1.MessageDC msg = ((WPFClient.ServiceReference1.MessageDC)(inValues[0]));
            WPFClient.ServiceReference1.ClientDC receiver = ((WPFClient.ServiceReference1.ClientDC)(inValues[1]));
            return this.BeginWhisper(msg, receiver, callback, asyncState);
        }
        
        private object[] OnEndWhisper(System.IAsyncResult result) {
            this.EndWhisper(result);
            return null;
        }
        
        private void OnWhisperCompleted(object state) {
            if ((this.WhisperCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.WhisperCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void WhisperAsync(WPFClient.ServiceReference1.MessageDC msg, WPFClient.ServiceReference1.ClientDC receiver) {
            this.WhisperAsync(msg, receiver, null);
        }
        
        public void WhisperAsync(WPFClient.ServiceReference1.MessageDC msg, WPFClient.ServiceReference1.ClientDC receiver, object userState) {
            if ((this.onBeginWhisperDelegate == null)) {
                this.onBeginWhisperDelegate = new BeginOperationDelegate(this.OnBeginWhisper);
            }
            if ((this.onEndWhisperDelegate == null)) {
                this.onEndWhisperDelegate = new EndOperationDelegate(this.OnEndWhisper);
            }
            if ((this.onWhisperCompletedDelegate == null)) {
                this.onWhisperCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnWhisperCompleted);
            }
            base.InvokeAsync(this.onBeginWhisperDelegate, new object[] {
                        msg,
                        receiver}, this.onEndWhisperDelegate, this.onWhisperCompletedDelegate, userState);
        }
        
        public void IsWriting(WPFClient.ServiceReference1.ClientDC client) {
            base.Channel.IsWriting(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginIsWriting(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginIsWriting(client, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndIsWriting(System.IAsyncResult result) {
            base.Channel.EndIsWriting(result);
        }
        
        private System.IAsyncResult OnBeginIsWriting(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WPFClient.ServiceReference1.ClientDC client = ((WPFClient.ServiceReference1.ClientDC)(inValues[0]));
            return this.BeginIsWriting(client, callback, asyncState);
        }
        
        private object[] OnEndIsWriting(System.IAsyncResult result) {
            this.EndIsWriting(result);
            return null;
        }
        
        private void OnIsWritingCompleted(object state) {
            if ((this.IsWritingCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.IsWritingCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void IsWritingAsync(WPFClient.ServiceReference1.ClientDC client) {
            this.IsWritingAsync(client, null);
        }
        
        public void IsWritingAsync(WPFClient.ServiceReference1.ClientDC client, object userState) {
            if ((this.onBeginIsWritingDelegate == null)) {
                this.onBeginIsWritingDelegate = new BeginOperationDelegate(this.OnBeginIsWriting);
            }
            if ((this.onEndIsWritingDelegate == null)) {
                this.onEndIsWritingDelegate = new EndOperationDelegate(this.OnEndIsWriting);
            }
            if ((this.onIsWritingCompletedDelegate == null)) {
                this.onIsWritingCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnIsWritingCompleted);
            }
            base.InvokeAsync(this.onBeginIsWritingDelegate, new object[] {
                        client}, this.onEndIsWritingDelegate, this.onIsWritingCompletedDelegate, userState);
        }
        
        public bool SendFile(WPFClient.ServiceReference1.FileMessageDC fileMsg, WPFClient.ServiceReference1.ClientDC receiver) {
            return base.Channel.SendFile(fileMsg, receiver);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginSendFile(WPFClient.ServiceReference1.FileMessageDC fileMsg, WPFClient.ServiceReference1.ClientDC receiver, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSendFile(fileMsg, receiver, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public bool EndSendFile(System.IAsyncResult result) {
            return base.Channel.EndSendFile(result);
        }
        
        private System.IAsyncResult OnBeginSendFile(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WPFClient.ServiceReference1.FileMessageDC fileMsg = ((WPFClient.ServiceReference1.FileMessageDC)(inValues[0]));
            WPFClient.ServiceReference1.ClientDC receiver = ((WPFClient.ServiceReference1.ClientDC)(inValues[1]));
            return this.BeginSendFile(fileMsg, receiver, callback, asyncState);
        }
        
        private object[] OnEndSendFile(System.IAsyncResult result) {
            bool retVal = this.EndSendFile(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSendFileCompleted(object state) {
            if ((this.SendFileCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SendFileCompleted(this, new SendFileCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SendFileAsync(WPFClient.ServiceReference1.FileMessageDC fileMsg, WPFClient.ServiceReference1.ClientDC receiver) {
            this.SendFileAsync(fileMsg, receiver, null);
        }
        
        public void SendFileAsync(WPFClient.ServiceReference1.FileMessageDC fileMsg, WPFClient.ServiceReference1.ClientDC receiver, object userState) {
            if ((this.onBeginSendFileDelegate == null)) {
                this.onBeginSendFileDelegate = new BeginOperationDelegate(this.OnBeginSendFile);
            }
            if ((this.onEndSendFileDelegate == null)) {
                this.onEndSendFileDelegate = new EndOperationDelegate(this.OnEndSendFile);
            }
            if ((this.onSendFileCompletedDelegate == null)) {
                this.onSendFileCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSendFileCompleted);
            }
            base.InvokeAsync(this.onBeginSendFileDelegate, new object[] {
                        fileMsg,
                        receiver}, this.onEndSendFileDelegate, this.onSendFileCompletedDelegate, userState);
        }
        
        public void Disconnect(WPFClient.ServiceReference1.ClientDC client) {
            base.Channel.Disconnect(client);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginDisconnect(WPFClient.ServiceReference1.ClientDC client, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginDisconnect(client, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public void EndDisconnect(System.IAsyncResult result) {
            base.Channel.EndDisconnect(result);
        }
        
        private System.IAsyncResult OnBeginDisconnect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            WPFClient.ServiceReference1.ClientDC client = ((WPFClient.ServiceReference1.ClientDC)(inValues[0]));
            return this.BeginDisconnect(client, callback, asyncState);
        }
        
        private object[] OnEndDisconnect(System.IAsyncResult result) {
            this.EndDisconnect(result);
            return null;
        }
        
        private void OnDisconnectCompleted(object state) {
            if ((this.DisconnectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.DisconnectCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void DisconnectAsync(WPFClient.ServiceReference1.ClientDC client) {
            this.DisconnectAsync(client, null);
        }
        
        public void DisconnectAsync(WPFClient.ServiceReference1.ClientDC client, object userState) {
            if ((this.onBeginDisconnectDelegate == null)) {
                this.onBeginDisconnectDelegate = new BeginOperationDelegate(this.OnBeginDisconnect);
            }
            if ((this.onEndDisconnectDelegate == null)) {
                this.onEndDisconnectDelegate = new EndOperationDelegate(this.OnEndDisconnect);
            }
            if ((this.onDisconnectCompletedDelegate == null)) {
                this.onDisconnectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnDisconnectCompleted);
            }
            base.InvokeAsync(this.onBeginDisconnectDelegate, new object[] {
                        client}, this.onEndDisconnectDelegate, this.onDisconnectCompletedDelegate, userState);
        }
    }
}
